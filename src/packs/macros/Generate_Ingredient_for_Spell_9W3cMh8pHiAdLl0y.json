{
  "name": "Generate Ingredient for Spell",
  "type": "script",
  "scope": "global",
  "_id": "9W3cMh8pHiAdLl0y",
  "author": "aDepqlKkeOa13DWo",
  "img": "icons/consumables/grains/sack-rice-open-brown.webp",
  "command": "const allowedLores = [\n  'fire',\n  'heavens',\n  'metal',\n  'beasts',\n  'life',\n  'light',\n  'death',\n  'shadow',\n  'hedgecraft',\n  'witchcraft'\n];\n\nconst compendium = \"Compendium.forien-armoury.forien-armoury.Item.\"\n\nconst loreIngredients = {\n  fire: \"Fyaz0um5STWsmcL7\",\n  heavens: \"rX639Tm9dTFGgdEs\",\n  metal: \"0Xe2tUDjV3jR2o17\",\n  beasts: \"0IzPuMHA4a4P0PYB\",\n  life: \"G4EdPUHqekDS6kj8\",\n  light: \"uCGbBeMU5TUZPoba\",\n  death: \"VuO1EDySwVbmtdcH\",\n  shadow: \"rsQryOWSCufQnNAC\",\n  hedgecraft: \"gEnMIQ1x4ETY1gCB\",\n  witchcraft: \"relq8BaanmuOaPEP\"\n}\n\nif (!actor)\n  return ui.notifications.notify(game.i18n.localize('Forien.Armoury.Macros.MustControlActor'), 'warning')\n\nconst spells = actor.itemCategories.spell;\nlet options = \"\";\n\nspells.forEach(spell => {\n  if (allowedLores.includes(spell.lore.value)) {\n    options += `<option value=\"${spell.uuid}\">${spell.name} (CN: ${spell.cn.value})</option>`;\n  }\n})\n\nconst dialog = new Dialog({\n  title: game.i18n.localize('Forien.Armoury.Macros.SelectSpell'),\n  content: `<form>\n              <div class=\"form-group\">\n                <label>${game.i18n.localize('Forien.Armoury.Macros.AvailableSpells')}</label> \n\t\t\t\t<select name=\"spell-id\" id=\"spell-id\">\n\t\t\t\t   ${options}\n\t\t\t\t</select>\n              </div>\n          </form>`,\n  buttons: {\n    yes: {\n      icon: \"<i class='fas fa-check'></i>\",\n      label: game.i18n.localize('Forien.Armoury.Macros.Generate'),\n      callback: html => {\n        let spellUuid = html.find(\"#spell-id\").val()\n        let spell = fromUuidSync(spellUuid);\n        let lore = spell.lore.value;\n        let uuid = compendium + loreIngredients[lore];\n        let baseIngredientPromise = fromUuid(uuid)\n\n        baseIngredientPromise.then(baseIngredient => {\n\n          const origData = baseIngredient.toObject();\n          let ingredient;\n          let template = {data: game.system.model.Item[baseIngredient.type]};\n          let ingredientData = mergeObject(template, origData);\n\n          let ingredientFor = game.i18n.localize('Forien.Armoury.Macros.IngredientFor');\n          ingredientData.name = `${ingredientFor} ${spell.name}`;\n          switch (lore.toLowerCase()) {\n            case 'hedgecraft':\n              ingredientData.system.price.bp = 5;\n              break;\n            case 'witchcraft':\n              ingredientData.system.price.bp = spell.cn.value;\n              break;\n            default:\n              ingredientData.system.price.ss = spell.cn.value;\n          }\n          ingredientData.system.spellIngredient.value = spell._id;\n\n          Item.implementation.create(ingredientData, {renderSheet : true});\n        })\n      }\n    },\n    no: {\n      icon: \"<i class='fas fa-times'></i>\",\n      label: game.i18n.localize('Forien.Armoury.Macros.Cancel')\n    }\n  },\n  default: \"yes\"\n}).render(true)",
  "folder": "K7bIr7HUorfHR7Xh",
  "sort": 100000,
  "ownership": {
    "default": 2,
    "aDepqlKkeOa13DWo": 3
  },
  "flags": {},
  "_stats": {
    "systemId": "wfrp4e",
    "systemVersion": "6.5.9",
    "coreVersion": "11.304",
    "createdTime": 1687447122457,
    "modifiedTime": 1689020386744,
    "lastModifiedBy": "ZJyAmf2sKocHG1ud"
  },
  "_key": "!macros!9W3cMh8pHiAdLl0y"
}