{
  "name": "Casting Mastery",
  "type": "trait",
  "_id": "WAZY5CYO5AT8hMy5",
  "img": "icons/magic/symbols/runes-triangle-orange-purple.webp",
  "system": {
    "description": {
      "value": "<p>Allows the Actor to always succeed Casting Tests with WPB SL.</p>"
    },
    "gmdescription": {
      "value": ""
    },
    "rollable": {
      "value": false,
      "damage": false,
      "skill": "",
      "rollCharacteristic": "",
      "bonusCharacteristic": "",
      "dice": "",
      "defaultDifficulty": "challenging",
      "SL": true,
      "attackType": "melee"
    },
    "specification": {
      "value": ""
    },
    "qualities": {
      "value": []
    },
    "flaws": {
      "value": []
    },
    "category": "standard",
    "disabled": false
  },
  "effects": [
    {
      "transfer": true,
      "name": "Casting Mastery",
      "_id": "kpg6tadsVNoK2M1j",
      "changes": [],
      "disabled": false,
      "duration": {
        "startTime": null,
        "seconds": null,
        "combat": null,
        "rounds": null,
        "turns": null,
        "startRound": null,
        "startTurn": null
      },
      "description": "",
      "origin": null,
      "statuses": [],
      "flags": {
        "times-up": {
          "isPassive": true
        },
        "wfrp4e": {
          "hide": false,
          "_legacyData": {
            "effectApplication": "actor",
            "effectTrigger": "rollCastTest",
            "preventDuplicateEffects": false,
            "script": "/**\n * @author Forien\n * @link https://foundryvtt.com/community/forien\n */\n\nconst testData = args.test.data;\nconst result = testData.result;\nconst overcastData = result.overcast;\n\nconst wpb = args.test.actor.system.characteristics.wp.bonus;\nconst SL = Number(wpb);\nconst CN = Number(result.itemData.system.cn.value);\nconst memorized = !!result.itemData.system.memorized.value;\nconst overcasts = Math.max(SL - (memorized ? CN : CN * 2), 0);\nconst canOvercast = overcasts > 0;\n\n\nresult.SL = `+${SL}`;\nresult.outcome = \"success\";\nresult.castOutcome = \"success\";\nresult.description = \"Casting Succeeded\";\nresult.overcasts = overcasts;\novercastData.available = overcasts;\novercastData.originalSL = SL;\novercastData.total = overcasts;\novercastData.enabled = canOvercast;\n\nfor (let overcastType in overcastData.usage) {\n  if (overcastData.usage[overcastType]) {\n    overcastData.usage[overcastType].count = 0;\n    overcastData.usage[overcastType].current = overcastData.usage[overcastType].initial;\n\n    if (overcastType === \"other\") {\n      overcastData.usage[overcastType].available = overcastData.available >= 2\n    } else if(overcastType === \"target\" && overcastData.usage.target.AoE) {\n      overcastData.usage[overcastType].available = overcastData.available >= game.wfrp4e.config.overCastTable.AoE[0].cost;\n    } else {\n      overcastData.usage[overcastType].available = overcastData.available >= game.wfrp4e.config.overCastTable[overcastType][0].cost;\n    }\n  }\n}"
          }
        }
      },
      "tint": "#ffffff",
      "_stats": {
        "coreVersion": "12.327",
        "systemId": null,
        "systemVersion": null,
        "createdTime": null,
        "modifiedTime": null,
        "lastModifiedBy": null,
        "compendiumSource": null,
        "duplicateSource": null
      },
      "img": "icons/magic/symbols/runes-triangle-orange-purple.webp",
      "type": "base",
      "system": {
        "transferData": {
          "type": "document",
          "originalType": "document",
          "documentType": "Actor",
          "avoidTest": {
            "value": "none",
            "opposed": false,
            "prevention": true,
            "reversed": false
          },
          "testIndependent": false,
          "equipTransfer": false,
          "selfOnly": false,
          "prompt": false,
          "area": {
            "templateData": {},
            "keep": false,
            "aura": {
              "transferred": false,
              "render": true
            },
            "duration": "sustained"
          }
        },
        "itemTargetData": {
          "ids": [],
          "allItems": false
        },
        "scriptData": [
          {
            "label": "Casting Mastery",
            "trigger": "rollCastTest",
            "script": "/**\n * @author Forien\n * @link https://foundryvtt.com/community/forien\n */\n\nconst testData = args.test.data;\nconst result = testData.result;\nconst overcastData = result.overcast;\n\nconst wpb = args.test.actor.system.characteristics.wp.bonus;\nconst SL = Number(wpb);\nconst CN = Number(result.itemData.system.cn.value);\nconst memorized = !!result.itemData.system.memorized.value;\nconst overcasts = Math.max(SL - (memorized ? CN : CN * 2), 0);\nconst canOvercast = overcasts > 0;\n\n\nresult.SL = `+${SL}`;\nresult.outcome = \"success\";\nresult.castOutcome = \"success\";\nresult.description = \"Casting Succeeded\";\nresult.overcasts = overcasts;\novercastData.available = overcasts;\novercastData.originalSL = SL;\novercastData.total = overcasts;\novercastData.enabled = canOvercast;\n\nfor (let overcastType in overcastData.usage) {\n  if (overcastData.usage[overcastType]) {\n    overcastData.usage[overcastType].count = 0;\n    overcastData.usage[overcastType].current = overcastData.usage[overcastType].initial;\n\n    if (overcastType === \"other\") {\n      overcastData.usage[overcastType].available = overcastData.available >= 2\n    } else if(overcastType === \"target\" && overcastData.usage.target.AoE) {\n      overcastData.usage[overcastType].available = overcastData.available >= game.wfrp4e.config.overCastTable.AoE[0].cost;\n    } else {\n      overcastData.usage[overcastType].available = overcastData.available >= game.wfrp4e.config.overCastTable[overcastType][0].cost;\n    }\n  }\n}",
            "options": {
              "targeter": false,
              "deleteEffect": false
            },
            "async": false
          }
        ],
        "zone": {
          "type": "zone",
          "traits": {},
          "skipImmediateOnPlacement": false
        },
        "sourceData": {
          "test": {}
        },
        "condition": {
          "value": null,
          "numbered": false
        }
      },
      "sort": 0,
      "_key": "!items.effects!WAZY5CYO5AT8hMy5.kpg6tadsVNoK2M1j"
    }
  ],
  "folder": "PQAanEQoiIOxQp1r",
  "ownership": {
    "default": 0,
    "rTgnwDbJCJYDenyf": 3
  },
  "flags": {
    "exportSource": {
      "world": "wfrp4e",
      "system": "wfrp4e",
      "coreVersion": "11.315",
      "systemVersion": "7.0.3"
    },
    "core": {}
  },
  "_stats": {
    "systemId": "wfrp4e",
    "systemVersion": "8.0.1",
    "coreVersion": "12.331",
    "createdTime": 1704563206482,
    "modifiedTime": 1725649107156,
    "lastModifiedBy": "fFoy1XcWdYw2CdYl",
    "compendiumSource": null,
    "duplicateSource": null
  },
  "sort": 0,
  "_key": "!items!WAZY5CYO5AT8hMy5"
}
